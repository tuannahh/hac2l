name: build-hac2l-windows
on: [push, pull_request, workflow_dispatch]

jobs:
  win-msys2:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Checkout Atmosphere (libraries only)
        uses: actions/checkout@v4
        with:
          repository: Atmosphere-NX/Atmosphere
          path: atmosphere
          sparse-checkout: |
            libraries
          sparse-checkout-cone-mode: false

      - name: Setup MSYS2
        uses: msys2/setup-msys2@v2
        with:
          msystem: UCRT64
          update: true
          install: >-
            git
            make
            mingw-w64-ucrt-x86_64-toolchain
            mingw-w64-ucrt-x86_64-pkgconf
            mingw-w64-ucrt-x86_64-zlib
            mingw-w64-ucrt-x86_64-zstd
            mingw-w64-ucrt-x86_64-lz4

      - name: Verify templates
        shell: msys2 {0}
        run: test -f atmosphere/libraries/config/templates/stratosphere.mk && echo "templates OK"

      - name: Build (try host targets)
        shell: msys2 {0}
        run: |
          set -e
          export LIBRARIES=./atmosphere/libraries
          for T in generic generic_release release_generic host host_release; do
            echo ">>> try $T"
            if make -j"$(nproc)" $T LIBRARIES="$LIBRARIES"; then exit 0; fi
          done
          echo "no host target matched"; exit 2

      - name: Find output
        shell: msys2 {0}
        run: |
          set -e
          f="$(find . -type f \( -iname 'hac2l.exe' -o -name 'hac2l' \) | head -n 1)"
          [ -n "$f" ] || (echo "not found" && exit 1)
          cp "$f" hac2l.exe 2>/dev/null || { cp "$f" hac2l && mv hac2l hac2l.exe; }
          test -f hac2l.exe

      - uses: actions/upload-artifact@v4
        with:
          name: hac2l-windows-x64
          path: hac2l.exe
